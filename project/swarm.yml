version: '3'

# NOTE: for all of the images for the 5 microservices, you'll
# have to change the image: <name> part to whatever your image names are

services:
  caddy:
    image: arkadiyagapov/micro-caddy:1.0.1
    deploy:
      mode: global
    ports:
      - "8090:80"
      - "44390:443"
    volumes:
      - caddy_data:/data
      - caddy_config:/config

  broker-service:
    image: arkadiyagapov/brokerapp:1.0.2
    deploy:
      mode: replicated
      replicas: 1
    ports:
      - "8080:80"

  listener-service:
    image: arkadiyagapov/listenerapp:1.0.0
    deploy:
      mode: replicated
      replicas: 1

  authentication-service:
    image: arkadiyagapov/authapp:1.0.0
    deploy:
      mode: replicated
      replicas: 1
    environment:
      DSN: "host=postgres port=5432 user=postgres password=password dbname=users sslmode=disable timezone=UTC connect_timeout=5"

  logger-service:
    image: arkadiyagapov/loggerserviceapp:1.0.0
    deploy:
      mode: replicated
      replicas: 1

  mailer-service:
    image: arkadiyagapov/mailserviceapp:1.0.0
    deploy:
      mode: replicated
      replicas: 1
    environment:
      MAIL_DOMAIN: localhost
      MAIL_HOST: mailhog
      MAIL_PORT: 1025
      MAIL_ENCRYPTION: none
      MAIL_USERNAME: ""
      MAIL_PASSWORD: ""
      FROM_NAME: "John Smith"
      FROM_ADDRESS: john.smith@example.com

  front-end:
    image: arkadiyagapov/frontapp:1.0.2
    restart: always
    deploy:
      mode: replicated
      replicas: 1
    ports:
      - "80:8081"
    environment:
      ROOT_URL: 8081
      BROKER_URL: http://localhost:8080

  rabbitmq:
    image: 'rabbitmq:3.9-alpine'
    deploy:
      mode: global

  mailhog:
    image: 'mailhog/mailhog:latest'
    ports:
      - "8025:8025"
    deploy:
      mode: global

  mongo:
    image: 'mongo:latest'
    ports:
      - "27017:27017"
    deploy:
      mode: global
    environment:
      MONGO_INITDB_DATABASE: logs
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
    #volumes:
    #  - ./db-data/mongo/:/data/db

  postgres:
    image: 'postgres:14.2'
    ports:
      - "5432:5432"
    restart: always
    deploy:
      mode: replicated
      replicas: 1
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: users
    volumes:
      - ./db-data/postgres/:/var/lib/postgresql/data/

volumes:
  caddy_data:
    external: true
  caddy_config:
